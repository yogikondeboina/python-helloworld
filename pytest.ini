[pytest]
minversion = 6.0.0

testpaths = mypy/test mypyc/test

python_files = test*.py

# Where do the test cases come from?  We provide our own collection
# logic by implementing `pytest_pycollect_makeitem` in mypy.test.data;
# the test files import that module, and pytest sees the magic name
# and invokes it at the relevant moment.  See
# https://doc.pytest.org/en/latest/how-to/writing_plugins.html#collection-hooks

# Both our plugin and unittest provide their own collection logic,
# So we can disable the default python collector by giving it empty
# patterns to search for.
# Note that unittest requires that no "Test*" classes exist.
python_classes =
python_functions =

# always run in parallel (requires pytest-xdist, see test-requirements.txt)
# and enable strict mode: require all markers
# to be defined and raise on invalid config values
addopts = -nauto --strict-markers --strict-config

# treat xpasses as test failures so they get converted to regular tests as soon as possible
xfail_strict = true
